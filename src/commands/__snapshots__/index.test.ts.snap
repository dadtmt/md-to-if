// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`applyCommand returns [error node content with missing path message, unmodified state] 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": "path is required to set a value -- path val value",
        "type": "text",
      },
      Object {
        "content": Array [
          Object {
            "content": " set val 2 ",
            "type": "text",
          },
        ],
        "type": "command",
      },
    ],
    "type": "error",
  },
  Object {
    "currentSceneName": "current scene",
  },
]
`;

exports[`applyCommand returns [error node content, unmodified state] 1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": "wanted Error",
        "type": "text",
      },
      Object {
        "content": Array [
          Object {
            "content": " error ",
            "type": "text",
          },
        ],
        "type": "command",
      },
    ],
    "type": "error",
  },
  Object {
    "currentSceneName": "current scene",
  },
]
`;

exports[`applyCommand returns [error not valid operator node content, unmodified state] for instruction test playedCount maybe 1 true  1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": "Operator maybe is not valid",
        "type": "text",
      },
      Object {
        "content": Array [
          Object {
            "content": " test playedCount maybe val 1 ",
            "type": "text",
          },
        ],
        "type": "command",
      },
    ],
    "type": "error",
  },
  Object {
    "currentSceneName": "currentSceneName",
    "played": Object {
      "currentSceneName": 1,
    },
  },
]
`;

exports[`applyCommand returns [error operator supports only number node content, unmodified state] for instruction test playedCount lte string true  1`] = `
Array [
  Object {
    "content": Array [
      Object {
        "content": "right operand of the test must be a number",
        "type": "text",
      },
      Object {
        "content": Array [
          Object {
            "content": " test playedCount lte val string ",
            "type": "text",
          },
        ],
        "type": "command",
      },
    ],
    "type": "error",
  },
  Object {
    "currentSceneName": "currentSceneName",
    "played": Object {
      "currentSceneName": 1,
    },
  },
]
`;
